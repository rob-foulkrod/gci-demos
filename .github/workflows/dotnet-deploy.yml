# Set the following secrets
# AZURE_CLIENT_ID
# AZURE_TENANT_ID
# AZURE_SUBSCRIPTION_ID

name: Build and push to Azure

env:
  WORKING_DIRECTORY: 'web'
  APP_NAME: 'gcidemo-app1'
  DOTNET_VERSION: '6.0.x'

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore
      
    - name: Test
      run: dotnet test --no-build --verbosity normal
      
    - name: Publish
      working-directory: ${{ env.WORKING_DIRECTORY }}
      run: dotnet publish -c release -o ../out
      
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: webapp
        path: ./out

  deploy:
    needs: [build]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment:
      name: production
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write
      contents: read
    steps:
     - name: download artifacts
       uses: actions/download-artifact@v2
       with:
        name: webapp
        
     - name: 'Az CLI login'
       uses: azure/login@v1
       with:
         client-id: ${{ secrets.AZURE_CLIENT_ID }}
         tenant-id: ${{ secrets.AZURE_TENANT_ID }}
         subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
         
     - name: Azure WebApp
       uses: Azure/webapps-deploy@v2
       id: deploy-to-webapp
       with:
         app-name: ${{ env.APP_NAME }}
         slot-name: Production
         package: .
